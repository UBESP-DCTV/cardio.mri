% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phcox_loss.R
\name{coxph_loss}
\alias{coxph_loss}
\title{Cox Proportional Hazard non-linear loss function}
\usage{
coxph_loss(y_true, y_pred)
}
\arguments{
\item{y_true}{(list) of two element: [y_true][\link{"event"}] is the event
indicator (0 = censored, 1 = event), [y_true][\link{"time"}] is the
corresponding time (of event if event = 1, or censoring if event =
0).}

\item{y_pred}{(2D array) single column array reporting predicted risk
scores for subjects in each rows.}
}
\description{
Cox Proportional Hazard non-linear loss function
}
\note{
Loss functions in tensorflow require 2 input only, i.e., y_ture
(ground true references) and y_pred (network predictions). On the
other hand for survival loss function we need to evaluate the loss
at the batch level considering losses computed for each subject
using their corresponding risk set. So, we need to pass to the
function the risk set also. Moreover the loss for survival risk
scores is only a matter of concordance between confrontable
subjects (i.e., subjects in the same risk set), so the
event/censoring indicator and time are sufficent end necessary to
evaluate the loss.
}
\examples{
example_original_y <- list(
  event = c(1L, 0L, 0L, 1L, 1L, 1L, 0L),
  time = c(12, 15, 37, 24, 39, 14, 11)
)
y_true <- list(
  event = np$array(array(example_original_y$event, dim = c(7, 1))),
  riskset = make_riskset(example_original_y$time)
)
y_pred <- np$array(array(example_original_y$time, dim = c(7, 1)))
batch_losses <- coxph_loss(y_true, y_pred)
batch_loss <- mean(reticulate::py_to_r(batch_losses))
}
